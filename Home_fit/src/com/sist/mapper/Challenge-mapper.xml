<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sist.mapper.Challenge-mapper.xml">
<!-- 검색 결과 출력하기 -->
<select id="challengeSearchData" parameterType="hashmap" resultType="ChallengeVO">
	SELECT TO_CHAR(regdate,'yyyy-MM-dd') as regdate,period, Challenge_no,cate,TO_CHAR(start_day,'yyyy-MM-dd') as db_start_day,TO_CHAR(end_day,'yyyy-MM-dd') as db_end_day,poster,title,id_leader,limit, num
	FROM (SELECT
	regdate,period,Challenge_no,cate,start_day,end_day,poster,title,id_leader,limit,rownum
	as num
	FROM (SELECT
	regdate,period,Challenge_no,cate,start_day,end_day,poster,title,id_leader,limit
	FROM
	challenge 
	WHERE title LIKE '%'||#{keyword}||'%' 
	OR content LIKE '%'||#{keyword}||'%' 
	ORDER BY regdate DESC))
	WHERE num BETWEEN #{start} AND #{end}
</select>


<!-- 검색 결과 총 페이지 수 -->
<select id="challengeSearchTotalPage" parameterType="String" resultType="int">
	SELECT CEIL(COUNT(*)/12.0) FROM challenge
	WHERE title LIKE '%'||#{keyword}||'%' 
	OR content LIKE '%'||#{keyword}||'%' 
	ORDER BY regdate DESC
</select>

<!-- 진행 상태별 list -->
	<!-- 챌린지 카테고리별 list -->
	<select id="challengeStateListData" resultType="ChallengeVO" parameterType="hashmap">
			SELECT TO_CHAR(regdate,'yyyy-MM-dd') as regdate,period, Challenge_no,cate,start_day,end_day,poster,title,id_leader,limit, num
			FROM (SELECT
			regdate,period,Challenge_no,cate,start_day,end_day,poster,title,id_leader,limit,rownum
			as num
			FROM (SELECT
			regdate,period,Challenge_no,cate,start_day,end_day,poster,title,id_leader,limit
			FROM
			challenge ORDER BY start_day DESC))
			WHERE num BETWEEN #{start} AND #{end}
		<choose> 
			<when test='state=="done"'>
				AND TO_CHAR(SYSDATE,'yyyy-MM-dd') as today &lt; TO_CHAR(#{start_day},'yyyy-MM-dd') as db_start_day
			</when>
			<when test='state=="wait"'>
				AND TO_CHAR(#{end_day},'yyyy-MM-dd') as db_end_day &lt; TO_CHAR(SYSDATE,'yyyy-MM-dd') as today
			</when>
			<otherwise>
				AND #{end_day} &lt; SYSDATE
			</otherwise>
		</choose>
	</select>



	<!--도전 period 구하기 -->
	<select id="challengePeriodCount" resultType="int" parameterType="int">
		SELECT period FROM challenge
		WHERE challenge_no=#{challenge_no}
	</select>
	<!-- 도전 참여자 수 구하기 -->
	<select id="totalPaticipantCount" resultType="int" parameterType="int">
		SELECT COUNT(*) FROM challenge_participation
		WHERE challenge_no=#{challenge_no}
	</select>
	
	<!-- 챌린지 list -->
	<select id="challengeCateListData" resultType="ChallengeVO" parameterType="hashmap">
		<if test='cate==null || cate==""'>
			SELECT TO_CHAR(regdate,'yyyy-MM-dd') as regdate,period, Challenge_no,cate,TO_CHAR(start_day,'yyyy-MM-dd') as db_start_day,TO_CHAR(end_day,'yyyy-MM-dd') as db_end_day,poster,title,id_leader,limit, num
			FROM (SELECT
			regdate,period,Challenge_no,cate,start_day,end_day,poster,title,id_leader,limit,rownum
			as num
			FROM (SELECT
			regdate,period,Challenge_no,cate,start_day,end_day,poster,title,id_leader,limit
			FROM
			challenge ORDER BY ${sorting} DESC))
			WHERE num BETWEEN #{start} AND #{end}
		</if>
		<if test="cate!=null">
			SELECT TO_CHAR(regdate,'yyyy-MM-dd') as regdate,period, Challenge_no,cate,TO_CHAR(start_day,'yyyy-MM-dd') as db_start_day,TO_CHAR(end_day,'yyyy-MM-dd') as db_end_day,poster,title,id_leader,limit, num
			FROM (SELECT
			regdate,period,Challenge_no,cate,start_day,end_day,poster,title,id_leader,limit,rownum
			as num
			FROM (SELECT
			regdate,period,Challenge_no,cate,start_day,end_day,poster,title,id_leader,limit
			FROM
			challenge WHERE cate=#{cate} ORDER BY ${sorting} DESC))
			WHERE num BETWEEN #{start} AND #{end}
		</if>
	</select>	
	
	<!-- 챌린지 리스트 검색 필터 넣어서 출력되는 list -->
	<select id="challengeFilterListData" resultType="ChallengeVO" parameterType="hashmap">
			SELECT
			period,Challenge_no,cate,start_day,end_day,poster,title,id_leader,limit, num
			FROM (SELECT
			period,Challenge_no,cate,start_day,end_day,poster,title,id_leader,limit,rownum
			as num
			FROM (SELECT
			period,Challenge_no,cate,start_day,end_day,poster,title,id_leader,limit
			FROM
			challenge 
			<trim prefix="WHERE" prefixOverrides="AND">
				<if test="cate != null">
					cate=#{cate}
				</if>		
				<if test="period !=null">
					AND period BETWEEN #{period} AND #{period}
				</if>
			</trim>
			ORDER BY start_day DESC))
			WHERE num
			BETWEEN #{start} AND #{end}
	</select>
	<!-- 챌린지 필터 적용한  총페이지 수 -->
	<select id="challengFilterTotalPage" resultType="int" parameterType="hashmap">
			SELECT CEIL(COUNT(*)/12.0) FROM challenge
			<trim prefix="WHERE" prefixOverrides="AND|OR">
			<if test="cate != null"> 
				cate=#{cate}
			</if>		
			<if test="period !=null">
				AND period = #{period}
			</if>
		</trim>
	</select>
	<!-- 챌린지 목록 전체 및 카테고리별 페이지 수 -->
	<select id="challengeCateTotalPage" resultType="int" parameterType="String">
		<if test="value==null || value==''">
			SELECT CEIL(COUNT(*)/12.0) FROM challenge
		</if>
		<if test="value!=null">
			SELECT CEIL(COUNT(*)/12.0) FROM challenge
			WHERE
			cate=#{cate}
		</if>
	</select>
	
	<!-- 챌린지 도전 추가하기 -->
	<insert id="challengeInsert" parameterType="ChallengeVO">
		INSERT INTO challenge VALUES(
		challenge_no_seq.nextval,
		#{cate},
		#{db_start_day},<!-- yyyy-MM-dd 형태로 오라클에 저장되지 않는 것 같음 -->
		#{title},
		#{limit},
		#{poster},
		#{content},
		#{id_leader},
		#{db_end_day},
		SYSDATE, <!-- 디폴트값 잡혀있는데 꼭넣어야 하나? -->
		#{period}
		)
		<selectKey keyProperty="challenge_no" resultType="int" order="AFTER">
			SELECT challenge_no_seq.currval challenge_no FROM dual
		</selectKey>
	</insert>
	
<!-- 	insert하자마자 max값 받아오고 > 참가자 목록에 추가 됨 -->
	<select id="ChallengeListData" resultType="ChallengeVO"
		parameterType="hashmap">
		SELECT Challenge_no,cate,TO_CHAR(START_DAY,'YYYY-MM-DD') as
		db_start_day,title, limit, poster,content,id_leader,num
		FROM (SELECT Challenge_no,cate,START_DAY,title, limit,
		poster,content,id_leader,rownum as num
		FROM (SELECT Challenge_no,cate,START_DAY,title, limit,
		poster,content,id_leader
		FROM Challenge ORDER BY challenge_no DESC))
		WHERE num BETWEEN #{start} AND #{end}
	</select>
	
	<!-- 인증 업로드 -->
	<insert id="Challenge_CertifiedUpload"
		parameterType="Challenge_CertifiedVO">
		<selectKey keyProperty="certified_no" resultType="int"
			order="BEFORE">
			SELECT NVL(MAX(certified_no)+1,1) FROM Challenge_Certified
		</selectKey>
		INSERT INTO Challenge_Certified VALUES(
		#{challenge_no},
		#{poster},
		SYSDATE,
		#{certified_check},
		#{certified_no},
		#{challenge_id}
		)
	</insert>
	
	<!-- 방에 참여중인지 확인하는 부분 -->
	<select id="Challnege_paticipation_check"
		parameterType="Challenge_ParticipationVO" resultType="int">
		SELECT COUNT(*) FROM challenge_participation
		WHERE challenge_no=#{challenge_no}
		AND challenge_id=#{challenge_id}
	</select>


	<!-- 방 참가하는 부분 -->
	<insert id="Challenge_participation"
		parameterType="Challenge_ParticipationVO">
		INSERT INTO challenge_participation VALUES(
		#{challenge_no},
		#{challenge_id}
		)
	</insert>



	
	
	<!-- 인증있는지 없는지 확인하기 -->
	<select id="myChallenge_Certified_check" resultType="int" parameterType="hashmap">
		SELECT COUNT(*) FROM challenge_certified WHERE challenge_id=#{id} AND TO_CHAR(certified_date,'yyyy-MM-dd')=#{strday}
	</select>
	
	
	<!-- 마이페이지에 띄울 인증 정보 가져오는 부분 -->
	<select id="myChallenge_CertifiedData" resultType="Challenge_CertifiedVO" parameterType="hashmap">
		SELECT poster FROM challenge_certified 
		WHERE challenge_id=#{id}
		AND TO_CHAR(Certified_date,'yyyy-MM-dd') = #{date}
	</select>
	
	
	<!-- 회원이 참가한 방 목록 -->
	<!-- 
		SELECT c.challenge_no,c.cate,c.title,c.poster,c.period
		FROM Challenge c
		JOIN challenge_participation p
		ON c.challenge_no=p.challenge_no
		WHERE p.challenge_id='seunggu'
		ORDER BY p.challenge_no;
	 -->
	<resultMap type="ChallengeVO" id="mychallengeRoom">
		<result property="challenge_no" column="challenge_no"/>
		<result property="cate" column="cate"/>
		<result property="title" column="title"/>
		<result property="poster" column="poster"/>
		<result property="period" column="period"/>
		<result property="cpVO.challenge_id" column="challenge_id"/>
	</resultMap>
	<select id="mychallengeRoomList" parameterType="hashmap" resultMap="mychallengeRoom">
	SELECT c.challenge_no,cate,title,poster,period
		FROM Challenge c
		JOIN challenge_participation p
		ON c.challenge_no=p.challenge_no
		WHERE p.challenge_id=#{id}
		ORDER BY p.challenge_no DESC
		
		
	</select>
	
	
	
	
	
	
	
	 <!-- 회원이 인증한 방에 대한 정보 가져오기 -->
	 
	 <resultMap type="ChallengeVO" id="mychallengeList">
	 	<result property="title" column="title"/>
	 	<result property="ccVO.challenge_no" column="challenge_no"/>
	 	<result property="ccVO.poster" column="poster"/>
	 	<result property="ccVO.Certified_date" column="Certified_date"/>
		 <result property="ccVO.challenge_id" column="challenge_id"/>	 
	 </resultMap>
	 
	 <!-- 회원이 인증한 사진 목록 -->
	 <select id="myChallenge_roomdetail" parameterType="hashmap" resultMap="mychallengeList">
	 	SELECT c.challenge_no,title,cc.poster,Certified_date,challenge_id
		FROM Challenge c
		JOIN challenge_certified cc
		ON c.challenge_no=cc.challenge_no
		WHERE cc.challenge_id=#{id}
		ORDER BY cc.Certified_date DESC
	 </select>
	
 
	 
	 <!-- 회원이 인증한 방에 대한 정보 가져오기 -->
<!-- 	 <select id="myChallenge_roomdetail2" parameterType="hashmap" resultType="ChallengeVO"> -->
<!-- 	 	SELECT * -->
<!-- 		FROM Challenge c -->
<!-- 		JOIN challenge_certified cc -->
<!-- 		ON c.challenge_no=cc.challenge_no -->
<!-- 		WHERE cc.challenge_id=#{challenge_id} -->
<!-- 		AND TO_CHAR(cc.certified_date,'yyyy-MM-dd')=#{my_selected_date}; -->
<!-- 	 </select> -->
	
	
	
	
</mapper>